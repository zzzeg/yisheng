import request from './request'

function getMsgCode(obj) {

    return request.post({
        url: '/api/sms/sendCode',
        data: obj.data,
    });

}

function getTestCode(obj) {

    return request.get({
        url: '/wechatMWMini/getTestCode',
    })
}

function getTempAccount(obj) {

    return request.get({
        url: '/wechatFuwu/userInfo',
        data: obj.data,
    })
}

function getUnionid(obj) {
    //   console.log("getUnionid")
    //     console.log(obj)
    return request.get({
        url: '/wechatMWMini/snsJscode2session',
        data: obj.data,
    });

}
// 账户信息
function getUserInfo(obj) {

    return request.get({
        url: '/wechatFuwu/userInfo',
        data: obj.data,
    })
}
// 账户信息
function getAccountInfo(obj) {

    return request.get({
        url: '/wechatMWMini/userInfo',
        data: obj.data,
    })
}

function createUser(obj) {

    return request.post({
        url: '/api/user/createUser',
        data: obj.data,
    })
}

function findUserById(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    return request.get({
        url: '/constitutionUser/findByUserId',
        data: obj.data,
        header: header
    },true);

}

function findCommunityById(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    return request.get({
        url: '/communityInfo/findById',
        data: obj.data,
        header: header
    },true);

}

function getCommunityMessage(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    return request.get({
        url: '/communityMessage/page',
        data: obj.data,
        header: header
    },true);

}

function addCommunityMessage(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/json'
    }
    return request.post({
        url: '/communityMessage/add',
        data: obj.data,
        header: header
    },true);

}

function addCommunityAppraise(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/json'
    }
    return request.post({
        url: '/communityAppraise/add',
        data: obj.data,
        header: header
    },true);

}

function getUploadParams(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }

    return request.get({
        url: '/api/getUploadParams',
        data: obj.data,
        header: header
    },true)
}

function faceAnalysis(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }

    return request.post({
        url: '/face/analysis',
        data: obj.data,
        header: header
    },true)
}

function dialWithQuesTestWithQues(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/json'
    }

    return request.post({
        url: '/constitutionRecordInstance/dialWithQuesTestWithQues',
        data: obj.data,
        header: header
    },true)
}

function dialWithQuesTestWithTongue(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/json'
    }

    return request.post({
        url: '/constitutionRecordInstance/dialWithQuesTestWithTongue',
        data: obj.data,
        header: header
    },true)
}

function analysisFaceImage(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/constitutionRecordInstance/analysisFaceImage',
        data: obj.data,
        header: header
    },false)
}

function getFaceImageResult(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/constitutionRecordInstance/getFaceImageResult',
        data: obj.data,
        header: header
    },false)
}

function cutTongueImage(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/constitutionRecordInstance/cutTongueImage',
        data: obj.data,
        header: header
    },false)
}

function cutTongueBackImage(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/constitutionRecordInstance/cutTongueBackImage',
        data: obj.data,
        header: header
    },false)
}

function getTongueBackImageResult(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/constitutionRecordInstance/getTongueBackImageResult',
        data: obj.data,
        header: header
    },false)
}

function getEmchatToken(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/emchat/getToken',
        data: obj.data,
        header: header
    },false)
}

function emchatCreateConferences(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/emchat/createConferences',
        data: obj.data,
        header: header
    },false)
}

function addAdvisoryRecord(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/advisoryRecord/add',
        data: obj.data,
        header: header
    },false)
}

function findFaceById(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/face/findById',
        data: obj.data,
        header: header
    },false)
}

function faceFindPuductByIdAndType(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/face/findPuductByIdAndType',
        data: obj.data,
        header: header
    },false)
}

function constitutionOrderFindById(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/constitutionOrder/findById',
        data: obj.data,
        header: header
    },false)
}

function faceFindDetailByIdAndType(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/face/findDetailByIdAndType',
        data: obj.data,
        header: header
    },false)
}

function findByAdvisoryId(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/advisoryReport/findByAdvisoryId',
        data: obj.data,
        header: header
    },false)
}

function constitutionRecordInstanceFindById(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/constitutionRecordInstance/findById',
        data: obj.data,
        header: header
    },false)
}

function findAdvisoryReport(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/advisoryReport/findByAdvisoryId',
        data: obj.data,
        header: header
    },false)
}

function findCustomerOrderById(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/customerOrder/findById',
        data: obj.data,
        header: header
    },false)
}

function expertMessage(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/expertMessage/page',
        data: obj.data,
        header: header
    },false)
}

function findExpertById(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/expert/findById',
        data: obj.data,
        header: header
    },false)
}

function findMyCommunityMark(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/communityInfo/findMyMark',
        data: obj.data,
        header: header
    },false)
}

function findMyShareMark(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/marketMaterial/findMyMark',
        data: obj.data,
        header: header
    },false)
}

// 健康商城
function productClassifyList (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/productClassify/list',
        data: obj,
        header: header
    },false)
}
function communityProductList (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/communityProduct/page',
        data: obj,
        header: header
    },false)
}
function communityProductDetail (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/communityProduct/findById',
        data: obj,
        header: header
    },false)
}

function addByExpert(obj) {
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/json'
    }
    return request.post({
        url: '/expertMessage/add',
        data: obj.data,
        header: header
    });
}
function findProduct (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/communityProduct/findProduct',
        data: obj,
        header: header
    },false)
}

function getClassify (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/customerProduct/getClassify',
        data: obj,
        header: header
    },false)
}

function customerProductPage (obj){
    const sessionKey = uni.getStorageSync('sessionId');
	console.log(uni.getStorageSync('sessionId'));
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/customerProduct/page',
        data: obj,
        header: header
    },false)
}
function customerProductFindById (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/customerProduct/findById',
        data: obj,
        header: header
    },false)
}
// 获取服务站商城运费情况
function customerGetPostage (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/customerOrder/getPostage',
        data: obj,
        header: header
    },false)
}
// // 获取健康商城运费情况
function communityGetPostage (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/constitutionOrder/getPostage',
        data: obj,
        header: header
    },false)
}
//健康商城 提交订单
function constitutionOrderAddOrder (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.post({
        url: '/constitutionOrder/addOrder',
        data: obj,
        header: header
    },false)
}
//健康商城 订单列表
function constitutionOrderPage (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/orderView/page',
        data: obj,
        header: header
    },false)
}
// 管家分享列表
function marketMaterialPage (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/marketMaterial/page',
        data: obj,
        header: header
    },false)
}
//  管家分享详情
function marketMaterialDetail (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/marketMaterial/findById',
        data: obj,
        header: header
    },false)
}
//  管家分享评论列表
function materialCommentPage (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/materialComment/page',
        data: obj,
        header: header
    },false)
}
//  管家分享 评论
function materialCommentAdd (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/materialComment/add',
        data: obj,
        header: header
    },false)
}
//  管家分享点赞
function materialPraiseAdd (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/materialPraise/add',
        data: obj,
        header: header
    },false)
}
//  管家分享  取消点赞
function materialPraiseCancel (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/materialPraise/deleteByMaterialId',
        data: obj,
        header: header
    },false)
}
//  管家分享  评论点赞
function materialCommentPraiseAdd (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/materialCommentPraise/add',
        data: obj,
        header: header
    },false)
}
//  管家分享  评论取消点赞
function materialCommentPraiseCancel(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/materialCommentPraise/deleteByCommentId',
        data: obj,
        header: header
    },false)
}
//  管家分享 收藏
function marketMaterialMark(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/marketMaterial/markMaterial',
        data: obj,
        header: header
    },false)
}
//  管家分享 取消收藏
function marketMaterialCancelMark(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/marketMaterial/cancelMark',
        data: obj,
        header: header
    },false)
}
// 商品收藏 
function productMarkAdd (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/productMark/add',
        data: obj,
        header: header
    },false)
}
// 取消商品收藏
function productMarkDelete (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/x-www-form-urlencoded'
    }
    return request.post({
        url: '/productMark/deleteByProductId',
        data: obj,
        header: header
    },false)
}
// 商品收藏列表
function productMarkList (obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/productMark/findPage',
        data: obj.data,
        header: header
    },false)
}
// 报告记录列表  
function reportPage(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'Content-Type':'application/json'
    }
    return request.get({
        url: '/userReportView/findPage',
        data: obj,
        header: header
    },false)
}




// 获取服务站列表
function getcommuty(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/communityInfo/findPage',
        data: obj,
        header: header
    },false)
}
// 已加入服务站列表
function getmyjoincommunity(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/communityInfo/findMyJoin',
        data: obj,
        header: header
    },false)
}

// 已加入服务站列表
function canceljoincommunity(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/constitutionUser/cancelJoin',
        data: obj,
        header: header
    },false)
}

// 加入服务站
function joincommunity(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/constitutionUser/joinCommunity',
        data: obj,
        header: header
    },false)
}

// 获取服务站类型
function getcommunityType(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/communityApply/getPTag',
        data: obj,
        header: header
    },false)
}
// 获取服务站地区列表
function getareasList(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/communityInfo/areas',
        data: obj,
        header: header
    },false)
}

function getMarkVideoPage(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/myhVideo/markPage',
        data: obj.data,
        header: header
    },false)
}

// 明我直播，根据communityId获取直播列表
function getMyvideoList(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/myhVideo/page',
        data: obj,
        header: header
    },false)
}
// 明我直播，获取直播详情
function getMyhVideo(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/myhVideo/findById',
        data: obj,
        header: header
    },false)
}
// 明医说点赞
function praiseAdd(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/myhVideoPraise/add',
        data: obj,
        header: header
    },false)
}
// 明医说取消点赞
function praiseCancel(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/myhVideoPraise/deleteByVideoId',
        data: obj,
        header: header
    },false)
}
// 明医说收藏
function videoMarkAdd(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/myhVideoMark/add',
        data: obj,
        header: header
    },false)
}
// 明医说取消收藏
function videoMarkCancel(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/myhVideoMark/deleteByVideoId',
        data: obj,
        header: header
    },false)
}
// 直播列表
function getlives(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/live/getLives',
        data: obj,
        header: header
    },false)
}
// 往期直播列表
function getbacklives(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/liveBack/page',
        data: obj,
        header: header
    },false)
}

// 往期直播列表
function getbackInfo(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    return request.get({
        url: '/liveBack/findById',
        data: obj,
        header: header
    },false)
}


// 往期直播列表
function liveFindById(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/live/findById',
        data: obj,
        header: header
    },false)
}

function markCommunity(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/communityInfo/markCommunity',
        data: obj.data,
        header: header
    },false)
}
function cancelCommunityMark(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/communityInfo/cancelMark',
        data: obj.data,
        header: header
    },false)
}


// 我的明我，用户信息统计
function userstatisticsInfo(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.post({
        url: '/userStatistics/info',
        data: obj,
        header: header
    },false)
}
// 我的明我，获取报告列表
function getReportView(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/userReportView/findPage',
        data: obj,
        header: header
    },false)
}

function findDetailById(obj){
    const sessionKey = uni.getStorageSync('sessionId');
    const header = {
        'sskey': sessionKey,
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/dieticianPlan/findDetailById',
        data: obj,
        header: header
    },false)
}


function getCommunityByIdOmit(obj){
    const header = {
        'content-type': 'application/x-www-form-urlencoded'
    }
    
    return request.get({
        url: '/communityInfo/findByIdOmit',
        data: obj,
        header: header
    },false)
}
export default {
    getMsgCode,
    getAccountInfo,
    getUnionid,
    createUser,
    findUserById,
    findCommunityById,
    addCommunityAppraise,
    getUploadParams,
    faceAnalysis,
    dialWithQuesTestWithQues,
    dialWithQuesTestWithTongue,
    analysisFaceImage,
    getFaceImageResult,
    cutTongueImage,
    cutTongueBackImage,
    getTongueBackImageResult,
    getEmchatToken,
    addAdvisoryRecord,
    emchatCreateConferences,
    findFaceById,
    faceFindPuductByIdAndType,
    constitutionOrderFindById,
    faceFindDetailByIdAndType,
    findByAdvisoryId,
    constitutionRecordInstanceFindById,
    findAdvisoryReport,
    findExpertById,
    addByExpert,
    expertMessage,
    markCommunity,
    cancelCommunityMark,
	// 健康商城
	productClassifyList,
	communityProductList,
	communityProductDetail,
	findProduct,
	getClassify,
	customerProductPage,
	customerProductFindById,
	customerGetPostage,
	communityGetPostage,
	constitutionOrderAddOrder,
	constitutionOrderPage,
	marketMaterialPage,
	marketMaterialDetail,
	materialCommentPage,
	materialCommentAdd,
	materialPraiseCancel,
	materialPraiseAdd,
	marketMaterialMark,
	marketMaterialCancelMark,
	materialCommentPraiseAdd,
	materialCommentPraiseCancel,
	productMarkAdd,
	productMarkDelete,
	productMarkList,
	reportPage,
	// 服务站
	getcommuty,
	getmyjoincommunity,
	canceljoincommunity,
	joincommunity,
	getcommunityType,
	getareasList,
	getCommunityByIdOmit,
	// 名医说
	getMyvideoList,
	getMyhVideo,
	praiseAdd,
	praiseCancel,
	videoMarkAdd,
	videoMarkCancel,
	getlives,
	getbacklives,
	userstatisticsInfo,
	getReportView,
    addCommunityMessage,
    getCommunityMessage,
    liveFindById,
    findMyCommunityMark,
    findMyShareMark,
    getMarkVideoPage,
    findCustomerOrderById,
    findDetailById,
	getbackInfo,
    getTempAccount,
    getTestCode
}
