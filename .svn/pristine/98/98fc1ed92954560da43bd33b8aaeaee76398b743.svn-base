<template>
    <view class="content">
        <view  v-for="(record, index) in orderlist" :key="index" v-if="orderlist.length > 0" class="goods-section shape">
            <view class="header">
            	{{record.communityName}}
            </view>
            <view class="u-f-jsb delivery-status">
            	<text>{{record.createTime}}</text>
            	<text>
                    {{record.status=='GRIND_WAIT' ? '待处理' : record.status=='GRIND_DONIG' ? '处理中' : record.status=='GRIND_SUCCES' ? '处理完成' : record.status=='DELIVERY' ? '已发货' : record.status=='RECEIVED' ? '已收件' :
                    record.status=='GRIND_NOTPAY' ? '未支付' : 
                    record.status=='GRIND_WAIT' ? '待支付' : record.status=='GRIND_SUCCESS' ? '待处理' : record.status=='CANCLE' ? '已取消' : ''}}
                </text>
            </view>
            <view v-for="(it, i) in record.items" :key="i" >
                           
            	<view class="cart-item"  @click="clickDetaildddd(it)">
            		<view class="image-wrapper">
            			<image :src="it.icon" mode="aspectFill"></image>
            		</view>
            		<view class="item-right">
            			<text class="title">{{it.name}}</text>
            			<!-- <text class="attr">{{it.attr_val}}</text> -->
            			<view class="u-f item-right-bottom">
            				<text class="price">¥{{it.price/100}}</text>
            				<text class="price">x{{it.num}}</text>
            			</view>
            		</view>
            	</view>
            </view>
            <view class="yt-list">
            	<view class="yt-list-cell b-b">
            		<text v-if="record.orderType!='KK'" class="cell-tit">收货人：{{record.name}}    共<text class="base">{{record.num}}</text> 件</text><text>订单总额：</text>
            		<text class="cell-tip">￥{{record.price/100}}</text>
            	</view>
            	<view class="yt-list-cell b-b">
            		<view class="btn primary" @click="clickOrder(index)" > 订单详情 </view>
                    <view v-if="record.orderType=='KK'" class="btn primary" @click="clickMake(record)" > 
                        {{record.reserveStatus == 'FAIL' ? '预约失败' : record.reserveStatus == 'DOING' ? '预约中  ' : record.reserveStatus == 'SUCCESS' ? '预约信息' : '预约体检'}}
                    </view>
            	</view>
            </view>
        </view>
        <view v-if="orderlist.length <= 0"  style="text-align: center;">
            <image style="width: 123upx;height: 165upx; margin-top: 206upx;" src="../../static/image/img_gwd.png" mode=""></image>
            <view style="color: #A2A9BA;font-size: 30upx;">
                您还没有任何购买记录
            </view>
        </view>
    </view>
</template>

<script>
    import util from '../../common/util.js'
    import uniLoadMore from "../../components/uni-load-more/uni-load-more.vue"
    export default{
        components: {uniLoadMore},
    	data() {
    		return {
                ismore:false,
                contentText: {
                    contentdown: '查看更多',
                    contentrefresh: '加载中',
                    contentnomore: '没有更多',
                },
                communityId:null,
                orderPage:1,
                orderSize:10,
                orderlist:null,
            }
        },
        onLoad(options) {
        	this.communityId = this.$store.getters.communityId
        	
        	this.getOrderList()
        },
        onPullDownRefresh() {
            this.orderPage = 1
            this.getOrderList()
        },onReachBottom() {
		    console.log('onReachBottom')
		    this.status = 'loading'
		    uni.showNavigationBarLoading()
		
            this.orderPage++
            this.getOrderList()
            
		    
		},
		methods: {
            clickMake:function(item){
  
                var hospId
                if(item.items[0].itemSnapshot && JSON.parse(item.items[0].itemSnapshot).length>0){
                    
                    hospId = JSON.parse(item.items[0].itemSnapshot)[0].hospId
                }
                uni.navigateTo({
                    url:'/pages/service-record/makeMedical?reserveStatus='+item.reserveStatus + "&hospId=" 
                    +hospId + "&procudtId=" +item.items[0].procudtId + "&orderId=" +item.id +"&reserveFormId=" + item.reserveFormId
                })
            },
            clickDetaildddd:function(item){
                
                var hospId
                if(item.itemSnapshot && JSON.parse(item.itemSnapshot).length>0){
                    hospId = JSON.parse(item.itemSnapshot)[0].hospId
                }
                uni.navigateTo({
                    url:'../health-examination/product-info?code='+item.procudtId+'&hospId='+hospId
                })
            },
            clickOrder:function(index){
                var order = this.orderlist[index]
                uni.navigateTo({
                    url:"../order-detail/order-detail?from=1&orderid="+ order.id + '&type='+order.type + '&orderType='+order.orderType
                })
            },
            getOrderList(){
                
            	this.$api.constitutionOrderPage({
            		size:this.orderSize,
            		page:this.orderPage,
                    orderType:'KK'
            	}).then(res=>{
            		console.log(res);
                    if(res.status == 'OK'){
                        if(this.orderPage == 1){
                            this.orderlist = []
                            if(res.list.length>=this.size){
                                this.ismore = true
                            }
                        }
                        res.list.forEach(item => {
                            
                            item.createTime = util.formatTimestamp(item.orderTime, 'yyyy-MM-dd hh:mm')
                            item.num = 0
                            if(item.items){
                                item.items.forEach(it => {
                                    item.num = item.num +it.num
                                    
                                    if(it.icon && JSON.parse(it.icon).length > 0){
                                        it.icon = JSON.parse(it.icon)[0].url
                                    }
                                })
                            }
                            console.log(item)
                            this.orderlist.push(item);
                            
                        })
                        console.log(res.list)
                        uni.stopPullDownRefresh();
                        uni.hideNavigationBarLoading()
                    }
            	}).catch(err=>{
            		console.log(err);
            	})
            }
        }
    }
</script>

<style scoped lang="scss">
    .goods-section {
    	background: #fff;
    	padding-bottom: 1px;
    	margin: 0 30rpx;
    	margin-top: 30rpx;
    	padding: 30rpx;
    	background-color: #FFFFFF;
    	border-radius: 10px;
    	.header{
    		font-size: 28rpx;
    		color: #434E5E;
    	}
    	.delivery-status{
    		font-size: 26rpx;
    		margin: 20rpx 0;
    		text:nth-child(1){
    			color:#A2A9BA ;
    		}
    		text:nth-child(2){
    			color:#03BE90 ;
    		}
    	}
    	.cart-item {
    		display: flex;
    		align-items: center;
    		position: relative;
    		border-bottom: 1px solid #EFF1F6;
    		overflow: hidden;
    		padding: 30rpx 0;
    		.image-wrapper {
    			width: 156rpx;
    			height: 156rpx;
    			flex-shrink: 0;
    			position: relative;
    
    			image {
    				border-radius: 8upx;
    				width: 100%;
    				height: 100%;
    				transition: .6s;
    				opacity: 1;
    
    			}
    		}
    
    		.item-right {
    			display: flex;
    			flex-direction: column;
    			flex: 1;
    			overflow: hidden;
    			position: relative;
    			padding-left: 30rpx;
    
    			.title {
    				font-size: 30rpx;
    				color: #2A3441;
    				height: 40rpx;
    				line-height: 40rpx;
    				text-overflow: ellipsis;
    				overflow: hidden;
    				white-space: nowrap;
    			}
    
    			.price {
    				font-size: 30rpx;
    				color: #16202E;
    				line-height: 40rpx;
    			}
    
    			.attr {
    				font-size: 26rpx;
    				color: #A2A9BA;
    				height: 50rpx;
    				line-height: 50rpx;
    			}
    
    			.price {
    				height: 50rpx;
    				line-height: 50rpx;
    			}
    
    			.item-right-bottom {
    				justify-content: space-between;
    				align-items: center;
    			}
    		}
    	}
    }
    .yt-list-cell {
    	display: flex;
    	justify-content: flex-end;
    	align-items: center;
    	padding: 10rpx 0rpx 10rpx 40rpx;
    	line-height: 70rpx;
    	position: relative;
    
    	&.cell-hover {
    		background: #fafafa;
    	}
    
    	&.b-b:after {
    		left: 30rpx;
    	}
    	.cell-tit {
    		font-size: 26rpx;
    		color: #2A3441;
    		margin-right: 10rpx;
    
    		.base {
    			color: #03BE90;
    		}
    	}
    
    	.cell-tip {
    		font-size: 28rpx;
    		color: #2A3441;
    
    		&.base {
    			color: #03BE90;
    		}
    
    		&.smalltip {
    			color: #A2A9BA;
    			font-size: 20rpx;
    		}
    	}
    	.btn{
    		padding:0rpx 20rpx;
    		border-radius: 15px;
    		font-size: 26rpx;
    		font-family:Helvetica;
    		&.primary{
    			border:1px solid rgba(3,190,144,1);
    			color: #03BE90;
    			margin-right: 20rpx;
    		}
    		&.filled{
    			color: #FFFFFF;
    			background:linear-gradient(315deg,rgba(136,226,150,1) 0%,rgba(3,190,144,1) 100%);
    		}
    	}
    }
    
</style>
