<template>
	<view>
		<view class="health-top-content">
			<uni-search-bar radius="100" cancelButton="none" placeholder="输入商品名称" @confirm="search" />
			<uni-swiper-dot :info="bannerList" :current="current" :mode="mode" :dots-styles="dotsStyles" field="content">
				<swiper class="swiper-box" @change="change">
					<swiper-item v-for="(item, index) in bannerList" :key="index">
						<view :class="item.colorClass" class="swiper-item" @tap="goDetail(item.id,'community')">
							<image class="image" :src="item.url" mode="aspectFill" />
						</view>
					</swiper-item>
				</swiper>
			</uni-swiper-dot>
			<scroll-view id="tab-bar" class="scroll-h" :scroll-x="true" :show-scrollbar="false" :scroll-into-view="scrollInto">
			    <view v-for="(tab,index) in tabBars" :key="index" class="uni-tab-item" :id="tab.id" :data-current="index" @tap="ontabtap">   
			        <text class="uni-tab-item-title" :class="tabIndex==index ? 'uni-tab-item-title-active' : ''">{{tab.label}}</text>
			    </view>
			</scroll-view>
		</view>
		<view class="health-middle-content">
			<view class="health-model">
				<view class="h-title">
					新品推荐
				</view>
				<view class="u-f h-wrap">
					<view class="u-f u-column health-list" v-for="(item,index) in newProductList" :key="index" @click="goDetail(item.id,'community')">
						<image :src="item.pic" mode="aspectFill"></image>
						<view class="health-list-title">{{item.name}}</view>
						<view class="health-list-realprice">
							<text>{{item.price/item.originalPrice*10|toFixed2}}折</text>
							<text>￥{{item.price|toFixed2}}</text>
						</view>
						<view class="health-list-price">
							原价<text>￥{{item.originalPrice|toFixed2}}</text>
						</view>
					</view>
				</view>
			</view>
			<view class="health-model">
				<view class="h-title">
					热销产品
				</view>
				<view class="u-f h-wrap">
					<view class="u-f u-column health-list" v-for="(item,index) in hotProductList" :key="index" @click="goDetail(item.id,'community')">
						<image :src="item.pic" mode="aspectFill"></image>
						<view class="health-list-title">{{item.name}}</view>
						<view class="health-list-realprice">
							<text>{{item.price/item.originalPrice*10|toFixed2}}折</text>
							<text>￥{{item.price|toFixed2}}</text>
						</view>
						<view class="health-list-price">
							原价<text>￥{{item.originalPrice|toFixed2}}</text>
						</view>
					</view>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				dotsStyles: {
					backgroundColor: 'rgba(249, 249, 251, 1)',
					border: 'none',
					color: '#fff',
					selectedBackgroundColor: 'rgba(3, 190, 144, 1)',
					selectedBorder: 'none'
				},
				mode: 'dot',
				current:0,
				tabBars:[],
				bannerList: [],
				hotProductList:[],
				newProductList:[],
				communityId:''
			};
		},
		onLoad({communityId}) {
			this.communityId = '292138634851640796' //communityId
			this.requestData();
			this.getHotProduct();
			this.getBannerList();
			this.getNewProduct()
		},
		methods: {
			search(res) {
				uni.navigateTo({
					url: `/pages/health-search-page/health-search-page?value=${res.value}`,
				});
			},
			change(e) {
				this.current = e.detail.current
			},
			ontabtap(e) {
			    let index = e.target.dataset.current || e.currentTarget.dataset.current;
			},
			goDetail(id,type){
				uni.navigateTo({
					url: `/pages/health-product-detail/health-product-detail?id=${id}&type=${type}&communityId=${this.communityId}`,
				});
			},
			requestData(){
				this.$api.productClassifyList().then(res=>{
					if(res.status=="OK"){
						let arr = res.data
						arr.map(item=>{
							this.tabBars.push({
								id:item.id,
								label:item.name,
								value:''
							})
						})
					}
				}).catch(err=>{
					console.log(err);
				})
			},
			getHotProduct(){
				this.$api.communityProductList({
					size:999,
					page:1,
					hot:true,
				}).then(res=>{
					console.log(res);
					if(res.status=="OK"){
						res.list.map(item=>{
							this.hotProductList.push({
								price:item.price/100,
								originalPrice:item.originalPrice/100,
								name:item.name,
								pic:JSON.parse(item.icon)[0].url,
								id:item.id
							})
						})
					}
				}).catch(err=>{
					console.log(err);
				})
			},
			getNewProduct(){
				this.$api.communityProductList({
					size:999,
					page:1,
					recommend:true,
				}).then(res=>{
					console.log(res);
					if(res.status=="OK"){
						res.list.map(item=>{
							this.newProductList.push({
								price:item.price/100,
								originalPrice:item.originalPrice/100,
								name:item.name,
								pic:JSON.parse(item.icon)[0].url,
								id:item.id
							})
						})
					}
				}).catch(err=>{
					console.log(err);
				})
			},
			getBannerList(){
				this.$api.communityProductList({
					size:999,
					page:1,
					banner:true,
				}).then(res=>{
					console.log(res);
					if(res.status=="OK"){
						res.list.map(item=>{
							this.bannerList.push({
								url:JSON.parse(item.bannerPic)[0].url,
								name:item.name,
								id:item.id
							})
						})
					}
				}).catch(err=>{
					console.log(err);
				})
			}
		},
		filters: {
			toFixed2: function(value) {
				return value.toFixed(2);
			},
		}
	}
</script>

<style lang="scss" scoped>
	@mixin pad-left {
		padding-left: 20rpx;
	}
	.health-top-content{
		background-color: #FFFFFF;
	}
	.health-middle-content{
		.h-title{
			color: #16202E;
			font-size: 38rpx;
			font-weight:500;
			margin: 20rpx 0;
			text-align: center;
			// width:22px;
			// height:10px;
			// background:linear-gradient(90deg,rgba(3,190,144,0) 0%,rgba(3,190,144,1) 100%);
		}
		.health-list{
			margin-bottom: 40rpx;
			padding-bottom: 16rpx;
			width: 330rpx;
			background-color: #FFFFFF;
			border-radius: 30rpx;
			overflow: hidden;
			image{
				width: 330rpx;
				height: 330rpx;
			}
			&-title{
				font-size: 30rpx;
				font-weight: 500;
				color: #16202E;
				@include  pad-left
			}
			&-realprice{
				color: #03BE90;
				font-weight: 500;
				@include  pad-left
				text:nth-child(1){
					font-size: 20rpx;
				}
				text:nth-child(2){
					font-size: 24rpx;
				}
			}
			&-price{
				position: relative;
				font-size: 20rpx;
				font-weight: 500;
				color: #A0A8BC;
				@include  pad-left;
				text{
					position: relative;
					margin-left: 10rpx;
				}
				text::after{
					content: '';
					position: absolute;
					left:0;
					top:50%;
					width: 100%;
					height: 1px;
					background-color: #A0A8BC;
				}
			}
		}
	}
	.h-wrap{
		padding: 10rpx 32rpx;
		justify-content: space-between;
		flex-wrap: wrap;
	}
	.swiper-box {
	    flex: 1;
		padding: 0 16rpx;
	}
	.swiper-item {
	    display: flex;
	    flex-direction: row;
		height: 100%;
		border-radius: 20rpx;
		overflow: hidden;
	}
	.image {
		width: 750rpx;
	}
	.scroll-h {
	    display: flex;
	    width: 100%;
	    height: 80rpx;
	    flex-direction: row;
	    background-color: transparent;
	    /* #ifndef APP-PLUS */
	    white-space: nowrap;
	    /* #endif */
	}
	.uni-tab-item {
		/* #ifndef APP-PLUS */
		display: inline-block;
		/* #endif */
		display: inline-block;
	    flex-wrap: nowrap;
	    padding-left: 34rpx;
	    padding-right: 34rpx;
	}
	.uni-tab-item-title {
	    color: #434E5E;
	    font-size: 30rpx;
	    height: 80rpx;
	    line-height: 80rpx;
	    flex-wrap: nowrap;
	    /* #ifndef APP-PLUS */
	    white-space: nowrap;
	    /* #endif */
	}
	
</style>
